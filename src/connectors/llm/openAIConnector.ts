import type { ServiceConfig } from "../base/BaseConnector";\nimport { BaseConnector } from "../base/BaseConnector";\nimport { ApiClient } from "../../utils/apiClient";\n\nexport default class OpenAIConnector extends BaseConnector {\n  private client: ApiClient;\n\n  constructor(config: ServiceConfig) {\n    super(config);\n    this.client = new ApiClient({ baseUrl: config.url, apiKey: config.apiKey });\n  }\n\n  async connect(): Promise<boolean> {\n    // For OpenAI-compatible, ping /models endpoint\n    try {\n      await this.client.get("/models");\n      this.connected = true;\n      return true;\n    } catch {\n      this.connected = false;\n      return false;\n    }\n  }\n\n  async disconnect(): Promise<void> {\n    this.connected = false;\n  }\n\n  async checkStatus() {\n    try {\n      await this.client.get("/models");\n      return { isOnline: true };\n    } catch (e: any) {\n      return { isOnline: false, error: e?.message as string };\n    }\n  }\n}\n