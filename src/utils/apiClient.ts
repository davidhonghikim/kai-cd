export class ApiClient {\n  constructor(private opts: { baseUrl: string; apiKey?: string }) {}\n\n  private async request<T>(path: string, init: RequestInit): Promise<T> {\n    const headers: Record<string, string> = { \n      "Content-Type": "application/json",\n      ...(init.headers as any) };\n    if (this.opts.apiKey) headers["Authorization"] = `Bearer ${this.opts.apiKey}`;\n    const res = await fetch(`${this.opts.baseUrl}${path}`, { ...init, headers });\n    if (!res.ok) {\n      throw new Error(`HTTP ${res.status}`);\n    }\n    return res.json() as Promise<T>;\n  }\n\n  get<T>(path: string) { return this.request<T>(path, { method: "GET" }); }\n  post<T>(path: string, body: any) { return this.request<T>(path, { method: "POST", body: JSON.stringify(body) }); }\n}\n